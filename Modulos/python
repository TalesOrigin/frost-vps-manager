#!/bin/bash

# Function to check for Python installation
check_python() {
    if command -v python3 &> /dev/null; then
        echo "python3"
    elif command -v python &> /dev/null; then
        echo "python"
    elif command -v python2 &> /dev/null; then
        echo "python2"
    else
        echo "none"
    fi
}

# Function to get Python version
get_python_version() {
    local python_cmd=$1
    if [[ "$python_cmd" != "none" ]]; then
        $python_cmd --version 2>&1 | awk '{print $2}'
    else
        echo "Not installed"
    fi
}

# Function to install Python based on distro
install_python_instructions() {
    echo -e "\033[1;31mERROR: Python is not installed!\033[0m"
    echo -e "\033[1;33mPlease install Python first:\033[0m"
    
    if [[ -f /etc/debian_version ]]; then
        echo -e "\033[1;36mFor Ubuntu/Debian: sudo apt-get update && sudo apt-get install python3 python3-pip\033[0m"
    elif [[ -f /etc/redhat-release ]]; then
        echo -e "\033[1;36mFor CentOS/RHEL: sudo yum install python3 python3-pip\033[0m"
    elif [[ -f /etc/fedora-release ]]; then
        echo -e "\033[1;36mFor Fedora: sudo dnf install python3 python3-pip\033[0m"
    elif [[ -f /etc/arch-release ]]; then
        echo -e "\033[1;36mFor Arch: sudo pacman -S python python-pip\033[0m"
    else
        echo -e "\033[1;36mPlease install Python 3 using your distribution's package manager\033[0m"
    fi
}

# Export functions if script is sourced
if [[ "${BASH_SOURCE[0]}" != "${0}" ]]; then
    export -f check_python
    export -f get_python_version
    export -f install_python_instructions
fi

# If script is run directly, perform the check
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    PYTHON_CMD=$(check_python)
    if [[ "$PYTHON_CMD" == "none" ]]; then
        install_python_instructions
        exit 1
    else
        echo "Python found: $PYTHON_CMD"
        echo "Version: $(get_python_version $PYTHON_CMD)"
        exit 0
    fi
fi